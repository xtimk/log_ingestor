version: '3.4'

services:
  baseenricher:
    image: ${DOCKER_REGISTRY-}baseenricher
    build:
      context: .
      dockerfile: BaseEnricher/Dockerfile
    environment:
      #- InBrokerHostname=rabbitmq.allinone.local
      #- InBrokerPort=5672
      #- InBrokerTopic=base_message_queue
      #- OutBrokerHostname=rabbitmq.allinone.local
      #- OutBrokerPort=5672
      #- OutBrokerTopic=enriched_message_queue
      - InBrokerHostname=kafka
      - InBrokerPort=9092
      - InBrokerTopic=base_message_queue
      - OutBrokerHostname=kafka
      - OutBrokerPort=9092
      - OutBrokerTopic=enriched_message_queue
    depends_on:
      - "kafka"
    ports:
     - 60000:443
    networks:
      - "logingestor-net"

  fswriter:
    image: ${DOCKER_REGISTRY-}fswriter
    build:
      context: .
      dockerfile: FSWriter/Dockerfile
    depends_on:
      - "kafka"
    #networks:
    # - logingestor-net
    volumes:
     - filesystem-storage:/usr/share/log-ingestor/data
    environment:
     #- InBrokerHostname=rabbitmq.allinone.local
     #- InBrokerPort=5672
     #- InBrokerTopic=enriched_message_queue
     - InBrokerHostname=kafka
     - InBrokerPort=9092
     - InBrokerTopic=enriched_message_queue
     - StoragePathInContainer=/usr/share/log-ingestor/data
    networks:
      - "logingestor-net"

  agent:
    image: ${DOCKER_REGISTRY-}agent
    build:
      context: .
      dockerfile: Agent/Dockerfile
    depends_on:
      - "kafka"
    environment:
      - OutBrokerHostname=kafka
      - OutBrokerPort=9092
      - OutBrokerTopic=base_message_queue
    networks:
      - "logingestor-net"

  zookeeper:
    image: docker.io/bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - "logingestor-net"

  kafka:
    image: docker.io/bitnami/kafka:latest
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - "logingestor-net"

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
    volumes:
      - ~/kui/config.yaml:/etc/kafkaui/dynamic_config.yaml
    #  - kuiconfig:/etc/kafkaui/dynamic_config.yaml
    networks:
      - "logingestor-net"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - "logingestor-net"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    networks:
      - "logingestor-net"

networks:
  logingestor-net:

volumes:
  filesystem-storage:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  prom_data:


  #rabbitmq.allinone.local:
  #  container_name: "rabbitmq.allinone.local"
  #  hostname: "rabbitmq.allinone.local"
  #  image: rabbitmq:3.11-management
  #  environment:
  #      - RABBITMQ_DEFAULT_USER=guest
  #      - RABBITMQ_DEFAULT_PASS=guest
  #  ports:
  #      # AMQP protocol port
  #      - '5672:5672'
  #      # HTTP management UI
  #      - '15672:15672'
  #  #networks:
  #  # - logingestor-net

